<template>
  <div class="app-container">
    <div class="header">
      <el-form inline size="mini">
        <el-form-item>
          <el-date-picker
            v-model="filter.time"
            type="daterange"
            range-separator="至"
            start-placeholder="开始日期"
            end-placeholder="结束日期"
            value-format="yyyy-MM-dd"
          />
        </el-form-item>
        <el-button type="primary" size="mini" icon="el-icon-search" @click="fetchData" />
      </el-form>
    </div>
    <div class="top">
      <div class="top-left">vip订单</div>
      <div class="top-right">
        <el-button size="small" type="danger" :disabled="sels.length === 0" @click="deleteFileOrDirectory(sels)">批量删除</el-button>
      </div>
    </div>
    <el-table
      v-loading="tableData.loading"
      :data="tableData.array"
      border
      fit
      highlight-current-row
      @selection-change="selsChange"
    >
      <!-- 复选框 -->
      <el-table-column type="selection" align="center" />
      <el-table-column align="center" label="用户昵称">
        <template slot-scope="scope">{{ scope.row.userName }}</template>
      </el-table-column>
      <el-table-column align="center" label="外部订单">
        <template slot-scope="scope">{{ scope.row.outId }}</template>
      </el-table-column>
      <el-table-column align="center" label="支付类型">
        <template slot-scope="scope">{{ map.payType[scope.row.payType] }}</template>
      </el-table-column>
      <el-table-column align="center" label="订单状态">
        <template slot-scope="scope">{{ map.status[scope.row.status] }}</template>
      </el-table-column>
      <el-table-column align="center" label="vip订单类型">
        <template slot-scope="scope">{{ map.vipType[scope.row.vipType] }}</template>
      </el-table-column>
      <el-table-column align="center" label="发起时间">
        <template slot-scope="scope">{{ scope.row.createTime }}</template>
      </el-table-column>
      <el-table-column align="center" label="结束时间">
        <template slot-scope="scope">{{ scope.row.updateTime }}</template>
      </el-table-column>
      <el-table-column align="center" label="操作金额">
        <template slot-scope="scope">{{ scope.row.money }}</template>
      </el-table-column>
      <!-- <el-table-column align="center" label="操作">
        <template slot-scope="scope">
          <el-button type="success" plain size="mini" @click="clickVerify({id:scope.row.id,status:1}, scope.row)">通过</el-button>
          <el-button size="mini" plain type="danger" @click="rejectedVerify({id:scope.row.id,status:2},scope.row)">驳回</el-button>
          <el-button size="mini" type="primary" plain @click="clickVerify({id:scope.row.id,status:3},scope.row)">取消</el-button>
        </template>
      </el-table-column> -->
    </el-table>

    <pagination
      :pager-index="pager.pageNo"
      :pager-size="pager.pageSize"
      :pager-total="pager.total"
      @pagination-change="handlePagerChange"
    />
  </div>

</template>

<script>
import { orderList, deleteBatch, orderVerify } from '@/api/order'
import Pagination from '@/components/Pagination'
export default {
  components: {
    Pagination
  },
  data() {
    return {
      filter: {
        time: []
      },
      tableData: {
        loading: false,
        array: [],
        row: {}
      },
      pager: {
        pageNo: 1,
        pageSize: 10,
        total: 0,
        type: 1
      },
      map: {
        vipType: {
          1: '特价vip',
          2: '包月vip',
          3: '连续包月vip',
          4: '包年vip'
        },
        payType: {
          1: '支付宝',
          2: '微信',
          3: '银行卡'
        },
        status: {
          0: '待审核',
          1: '通过',
          2: '驳回',
          3: '已取消'
        }
      },
      sels: []
    }
  },
  created() {
    this.fetchData()
  },
  methods: {
    fetchData() {
      this.tableData.loading = true
      const _form = Object.assign({
        page: this.pager.pageNo,
        pageSize: this.pager.pageSize,
        type: this.pager.type
      }, this.filter)
      if (Array.isArray(_form.time) && _form.time.length === 2) {
        _form.begin_date = _form.time[0]
        _form.end_date = _form.time[1]
      }
      delete _form.time
      orderList(_form).then(res => {
        const { result = {}} = res
        this.tableData.array = result.records
        this.pager.total = result.total // 总数
      }).finally(_ => {
        this.tableData.loading = false
      })
    },
    handlePagerChange(val) {
      this.pager.pageSize = val.size
      this.pager.pageNo = val.index
      this.fetchData()
    },
    // 复选框的操作
    selsChange(sels) {
      this.sels = sels
    },
    // 批量删除
    deleteFileOrDirectory() {
      const ids = this.sels.map((row) => row.id).join()
      this.$confirm('确定要删除选中的vip订单吗?', '提示')
        .then(() => {
          deleteBatch({
            ids: ids
          }).then((data) => {
            this.$message.success(data.message)
            this.fetchData()
          })
        }).catch((error) => {
          console.log(error)
        })
    },
    // 状态操作
    clickVerify(data, item) {
      orderVerify(data).then(res => {
        this.$message.success(res.message)
        this.fetchData()
      })
    },
    // 驳回
    rejectedVerify(data, item) {
      console.log(item)
      orderVerify(data).then(res => {
        this.$message.success(res.message)
        this.fetchData()
      })
    }
  }
}

</script>
<style scoped>
</style>
