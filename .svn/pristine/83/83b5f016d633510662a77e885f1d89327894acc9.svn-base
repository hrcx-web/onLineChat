<template>
  <div class="app-container">
    <div class="header">
      <div class="header-left">软件下载</div>
      <div class="header-right">
        <el-button
          type="primary"
          size="small"
          @click="showDialog('add')"
        >新增</el-button>
      </div>
    </div>

    <el-table
      v-loading="tableData.loading"
      :data="tableData.array"
      border
      fit
      highlight-current-row
    >
      <!-- 复选框 -->
      <el-table-column type="selection" align="center" />
      <!-- <el-table-column align="center" label="软件下载id">
        <template slot-scope="scope">{{ scope.row.id }}</template>
      </el-table-column> -->
      <el-table-column align="center" label="软件名">
        <template slot-scope="scope">{{ scope.row.name }}</template>
      </el-table-column>
      <el-table-column align="center" label="软件版本">
        <template slot-scope="scope">{{ map.type[scope.row.type] }}</template>
      </el-table-column>
      <el-table-column align="center" label="app下载地址">
        <template slot-scope="scope">{{ scope.row.apkUrl }}</template>
      </el-table-column>
      <el-table-column align="center" label="apk版本">
        <template slot-scope="scope">{{ scope.row.version }}</template>
      </el-table-column>
      <!-- <el-table-column align="center" label="二维码展示地址">
        <template slot-scope="scope">
          <el-image
            style="width: 100px; height: 100px"
            :src="scope.row.url"
            :preview-src-list="scope.row.srcList"
          />
        </template>
      </el-table-column> -->
      <el-table-column align="center" label="说明">
        <template slot-scope="scope">{{ scope.row.mes }}</template>
      </el-table-column>
      <el-table-column label="操作" width="160" align="center">
        <template slot-scope="scope" class="button">
          <el-row :gutter="6">
            <el-col :span="12">
              <el-button
                size="mini"
                type="danger"
                @click="handleDelete(scope.$index, scope.row)"
              >删除</el-button>
            </el-col>
            <el-col :span="12" size="mini" tyle="margin-top: 5px">
              <el-button
                style="width: 100%"
                size="mini"
                @click="showDialog('edit', scope.row)"
              >编辑</el-button>
            </el-col>
          </el-row>
        </template>
      </el-table-column>
    </el-table>

    <pagination
      :pager-index="pager.pageNo"
      :pager-size="pager.pageSize"
      :pager-total="pager.total"
      @pagination-change="handlePagerChange"
    />
    <!-- 软件下载 -->
    <el-dialog
      :visible.sync="dialogVisible.version"
      width="400px"
      :title="`${mode === 'add' ? '新增' : '编辑'}软件下载信息`"
      center
      style="z-index: 9999"
    >
      <el-form
        ref="form"
        label-position="right"
        :validate-on-rule-change="false"
        label-width="120px"
        :model="form"
        size="mini"
      >
        <el-row :gutter="5">
          <el-col :span="20">
            <el-form-item label="软件名">
              <el-input v-model="form.name" />
            </el-form-item>
            <el-form-item label="软件版本">
              <el-select v-model="form.type" placeholder="请选择">
                <el-option
                  v-for="(value, key) in map.type"
                  :key="key"
                  :value="key"
                  :label="value"
                />
              </el-select>
            </el-form-item>
            <!-- <el-form-item label="设备版本">
              <el-input v-model="form.deviceVersion" />
            </el-form-item>                    -->
            <el-form-item label="app下载地址">
              <el-input v-model="form.apkUrl" type="textarea" autosize />
            </el-form-item>
            <el-form-item label="apk版本">
              <el-input v-model="form.version" />
            </el-form-item>
            <!-- <el-form-item label="二维码展示地址">
              <div class="icon-container" @click="fakeClick('url')">
                <i v-if="!form.url" class="el-icon-plus" />
                  <el-image
                  v-else
            style="width:100%; height:100%"
            :src="form.url"

          />
              </div>
            </el-form-item> -->
            <el-form-item label="说明">
              <el-input v-model="form.mes" />
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>
      <!-- <input type="file" style="visibility: hidden" class="url" @change="val => uploadFile(val, ['form','url'])"> -->
      <div slot="footer" class="dialog-footer">
        <el-button
          size="small"
          @click="dialogVisible.version = false"
        >取 消</el-button>
        <el-button
          type="primary"
          :loading="tableData.loading"
          size="small"
          @click="updateSubmit"
        >提交</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { initForm, copyObject, clearEmptyItem } from '@/utils/index'
import { douyinAppList, versionAdd, uploadSource, deleteBatch } from '@/api/version'
import Pagination from '@/components/Pagination'
export default {
  components: {
    Pagination
  },

  data() {
    return {
      mode: '', // 新增的
      tableData: {
        array: [],
        row: {},
        loading: false
      },
      pager: {
        pageNo: 1,
        pageSize: 10,
        total: 0
      },
      form: {
        mes: '',
        version: '',
        name: '',
        type: '',
        apkUrl: ''
      },
      dialogVisible: {
        version: false
      },
      map: {
        type: {
          1: 'ios',
          2: 'android'
        }
      }
    }
  },
  created() {
    this.fetchData()
  },
  methods: {
    //  查询
    fetchData() {
      this.tableData.loading = true
      const _form = Object.assign({
        pageNo: this.pager.pageNo,
        pageSize: this.pager.pageSize
      })
      douyinAppList(_form)
        .then((res) => {
          const { result = {}} = res
          // if (Array.isArray(result.records)) {
          //   result.records.forEach(item => {
          //     if (item.url) {
          //       item.srcList = item.url.split(',')
          //     }
          //   })
          // }
          this.tableData.array = result.records
          this.pager.total = result.total // 总数
        })
        .finally((_) => {
          this.tableData.loading = false
        })
    },

    //    新增
    showDialog(mode, item) {
      this.mode = mode
      this.tableData.row = item || {}
      this.form = initForm(this.form)
      if (mode === 'edit') {
        this.form = copyObject(this.form, item, {
          numberToString: true
        })
      }
      this.dialogVisible.version = true
    },
    // 提交
    updateSubmit() {
      this.tableData.loading = true
      let _form = Object.assign({ id: this.tableData.row.id }, this.form)
      _form = clearEmptyItem(_form)
      versionAdd(_form, this.mode)
        .then((res) => {
          // debugger
          this.tableData.loading = false
          this.$message.success(res.message)
          this.dialogVisible.version = false
          this.fetchData()
        })
        .catch((error) => {
          console.log(error)
          this.dialogVisible.version = false
        })
    },
    // uploadFile(e, target) {
    //   const files = e.target.files
    //   if (files.length) {
    //     const formData = new FormData()
    //     formData.append('file', files[0])
    //     uploadSource(formData).then(res => {
    //       this[target[0]][target[1]] = res.result
    //     })
    //   }
    // },
    // fakeClick(className) {
    //   const filesInput = document.querySelector(`input[type=file].${className}`)
    //   filesInput.click()
    // },

    // 分页
    handlePagerChange(val) {
      this.pager.pageNo = val.index
      this.pager.pageSize = val.size
      this.fetchData()
    },
    // 删除
    handleDelete(index, row) {
      deleteBatch({
        id: row.id
      })
        .then((data) => {
          this.$message.success(data.message)
          this.fetchData()
        })
        .catch((error) => {
          console.log(error)
        })
    }
  }
}
</script>

<style scoped  lang="scss">
.header {
  width: 100%;
  height: 60px;
  line-height: 60px;
  display: flex;
}
.header .header-left {
  flex: 1;
  font-weight: 500;
  font-size: 20px;
}
.header .header-right {
  width: 100px;
}
/* 新增图标 */
.icon-container {
  width: 80px;
  height: 80px;
  border-radius: 4px;
  border: 1px dashed #ccc;
  position: relative;
  cursor: pointer;
  i {
    display: block;
    font-size: 24px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 999;
  }
}
</style>
