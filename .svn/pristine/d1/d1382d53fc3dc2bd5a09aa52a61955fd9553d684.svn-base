<template>
  <div class="app-container">
    <div class="header">
      <el-form inline size="mini">
        <el-form-item>
          <el-date-picker
            v-model="filter.time"
            type="daterange"
            range-separator="至"
            start-placeholder="开始日期"
            end-placeholder="结束日期"
            value-format="yyyy-MM-dd"
          />
        </el-form-item>
        <el-button type="primary" size="mini" icon="el-icon-search" @click="fetchData" />
      </el-form>
    </div>
    <div class="top">
      <div class="top-left">意见反馈</div>
      <div class="top-right">
        <el-button size="small" :disabled="sels.length === 0" type="danger" @click="deleteFileOrDirectory(sels)">批量删除</el-button>
      </div>
    </div>
    <el-table
      v-loading="tableData.loading"
      :data="tableData.array"
      border
      fit
      highlight-current-row
      @selection-change="selsChange"
    >
      <el-table-column type="selection" align="center" />
      <el-table-column align="center" label="反馈人名">
        <template slot-scope="scope">{{ scope.row.userName }}</template>
      </el-table-column>
      <el-table-column align="center" label="反馈图">
        <template slot-scope="scope">
          <el-image
            style="width: 80px; height: 80px"
            :src="scope.row.questionImg"
            :preview-src-list="scope.row.srcList"
          />
        </template>
      </el-table-column>
      <el-table-column align="center" label="反馈内容">
        <template slot-scope="scope">{{ scope.row.questionContent }}</template>
      </el-table-column>
      <el-table-column align="center" label="反馈时间">
        <template slot-scope="scope">{{ scope.row.createTime }}</template>
      </el-table-column>
      <el-table-column align="center" label="联系方式">
        <template slot-scope="scope">{{ scope.row.userInfo }}</template>
      </el-table-column>
      <el-table-column align="center" label="结果图">
        <template slot-scope="scope">
          <el-image
            style="width: 80px; height: 80px"
            :src="scope.row.resultImg"
            :preview-src-list="scope.row.srcLists"
          />
        </template>
      </el-table-column>
      <el-table-column align="center" label="处理结果">
        <template slot-scope="scope">{{ scope.row.result }}</template>
      </el-table-column>
      <el-table-column align="center" label="处理时间">
        <template slot-scope="scope">{{ scope.row.updateTime }}</template>
      </el-table-column>
      <el-table-column label="操作" width="150px" align="center">
        <template slot-scope="scope">
          <!-- <el-row :gutter="20">
            <el-col :span="10" size="mini" tyle="margin-top: 5px"> -->
          <el-button size="mini" @click="showDialog(scope.row)">编辑</el-button>
          <!-- </el-col>
          </el-row> -->
        </template>
      </el-table-column>
    </el-table>
    <!-- 分页 -->
    <pagination
      :pager-index="pager.pageNo"
      :pager-size="pager.pageSize"
      :pager-total="pager.total"
      @pagination-change="handlePagerChange"
    />

    <!-- 编辑 -->
    <el-dialog :visible.sync="dialogVisible.feedback" width="500px" title="编辑反馈信息" center style="z-index: 9999">
      <el-form label-position="right" label-width="100px" :validate-on-rule-change="false" :model="rowd" size="mini">
        <el-row :gutter="20">
          <el-col :span="22">
            <el-form-item label="反馈内容">
              <el-input v-model="rowd.questionContent" />
            </el-form-item>
            <el-form-item label="反馈图" prop="title">
              <div class="dirImg" @click="fakeClick('questionImg')">
                <i v-if="!rowd.questionImg" class="el-icon-plus" />
                <el-image
                  v-else
                  style="width: 100%; height: 100%"
                  :src="rowd.questionImg"
                />
                <!-- <el-input v-model="rowd.questionImg" /> -->
              </div></el-form-item>
            <el-form-item label="处理结果" prop="title">
              <el-input v-model="rowd.result" />
            </el-form-item>
            <el-form-item label="结果图" prop="title">
              <div class="dirImg" @click="fakeClick('resultImg')">
                <i v-if="!rowd.resultImg" class="el-icon-plus" />
                <el-image
                  style="width: 100%; height: 100%"
                  :src="rowd.resultImg"
                />
              </div>
            </el-form-item>

          </el-col>
        </el-row>
      </el-form>
      <input type="file" class="resultImg" style="visibility: hidden" @change="val=>uploadFile(val,['rowd','resultImg'])">
      <input type="file" class="questionImg" style="visibility: hidden" @change="val=>uploadFile(val,['rowd','questionImg'])">
      <div slot="footer" class="dialog-footer">
        <el-button
          size="small"
          @click="dialogVisible.feedback=false"
        >取 消</el-button>
        <el-button type="primary" :loading="tableData.loading" size="small" @click="updateSubmit">提交</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { questionList, deleteBatch, questionEdit } from '@/api/feedback'
import { uploadQNImg } from '@/api/user'
import Pagination from '@/components/Pagination'
export default {
  components: {
    Pagination
  },
  data() {
    return {
      tableData: {
        loading: false,
        array: [],
        row: {}
      },
      pager: {
        pageNo: 1,
        pageSize: 10,
        total: 0
      },
      sels: [],
      filter: {
        time: []
      },
      dialogVisible: {
        feedback: false
      },
      rowd: []

    }
  },
  created() {
    this.fetchData()
  },
  methods: {
    fetchData() {
      this.tableData.loading = true
      const _form = Object.assign({
        pageNo: this.pager.pageNo,
        pageSize: this.pager.pageSize
      }, this.filter)
      if (Array.isArray(_form.time) && _form.time.length === 2) {
        _form.begin_date = _form.time[0]
        _form.end_date = _form.time[1]
      }
      delete _form.time
      questionList(_form)
        .then(res => {
          const { result = {}} = res

          if (Array.isArray(result.records)) {
            result.records.forEach(item => {
              if (item.questionImg) {
                item.srcList = item.questionImg.split(',')
              }
              if (item.resultImg) {
                item.srcLists = item.resultImg.split(',')
              }
            })
          }
          this.tableData.array = result.records
          this.pager.total = result.total // 总数
        }).finally(_ => {
          this.tableData.loading = false
        })
    },
    selsChange(sels) {
      this.sels = sels
    },
    deleteFileOrDirectory() {
      const ids = this.sels.map((row) => row.id).join(',')
      this.$confirm('确定要删除选中的反馈信息吗?', '提示')
        .then(() => {
          deleteBatch({
            ids: ids
          }).then((data) => {
            this.$message.success(data.message)
            this.fetchData()
          })
        })
        .catch((error) => {
          console.log(error)
        })
    },
    showDialog(row) {
      this.dialogVisible.feedback = true
      this.rowd = row
    },
    updateSubmit() {
      questionEdit({
        id: this.rowd.id,
        questionContent: this.rowd.questionContent,
        questionImg: this.rowd.questionImg,
        result: this.rowd.result,
        resultImg: this.rowd.resultImg
      }).then(data => {
        this.$message.success(data.message)
        this.dialogVisible.feedback = false
        this.fetchData()
      }).catch(error => {
        console.log(error)
        this.dialogVisible.feedback = false
      })
    },
    fakeClick(className) {
      const filesInput = document.querySelector(`input[type=file].${className}`)
      filesInput.click()
    },
    uploadFile(e, target) {
      const files = e.target.files
      if (files.length) {
        const formData = new FormData()
        formData.append('multipartFile', files[0])
        uploadQNImg(formData).then(res => {
          this[target[0]][target[1]] = res.data
        })
      }
    },
    handlePagerChange(val) {
      this.pager.pageSize = val.size
      this.pager.pageNo = val.index
      this.fetchData()
    }
  }
}

</script>
<style lang="scss" scoped>
.dirImg{
     cursor: pointer;
    width: 80px;
    height: 80px;
    position: relative;
    border-radius:5px;
    border: 1px dashed #ccc !important;
   i{
     display: block;
     position: absolute;
     font-size:24px;
     top:50%;
     left: 50%;
     transform: translate(-50%,-50%);

   }
}
</style>
