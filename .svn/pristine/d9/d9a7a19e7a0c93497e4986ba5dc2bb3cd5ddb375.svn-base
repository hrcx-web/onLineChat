<template>
  <div class="app-container">
    <div class="top">
      <div class="top-left">用户视频配置</div>
      <div class="top-right">
        <el-button size="small" :disabled="sels.length === 0" type="danger" @click="deleteFileOrDirectory(sels)">批量删除</el-button>
        <el-button size="small" type="primary" @click="showDialog('add')">新增</el-button>
      </div>
    </div>
    <el-table
      v-loading="tableData.loading"
      :data="tableData.array"
      border
      fit
      highlight-current-row
      @selection-change="selsChange"
    >
      <el-table-column type="selection" align="center" />
      <el-table-column align="center" label="价格(撩币)">
        <template slot-scope="scope">{{ scope.row.price }}</template>
      </el-table-column>
      <el-table-column align="center" label="类型">
        <template slot-scope="scope">{{ map.type[scope.row.type] }}</template>
      </el-table-column>
      <el-table-column align="center" label="视频路径">
        <template slot-scope="scope">
          <video :src="scope.row.videoUrl" style="width: 80px; height: 80px;cursor: pointer;" @click="changeImg(scope.row)" />
        </template>
      </el-table-column>
      <el-table-column align="center" label="备注">
        <template slot-scope="scope">{{ scope.row.remark }}</template>
      </el-table-column>
      <el-table-column label="操作" width="150px" align="center">
        <template slot-scope="scope">
          <el-button size="mini" @click="showDialog('edit',scope.row)">编辑</el-button>
        </template>
      </el-table-column>
    </el-table>
    <pagination
      :pager-index="pager.pageNo"
      :pager-size="pager.pageSize"
      :pager-total="pager.total"
      @pagination-change="handlePagerChange"
    />
    <!-- 编辑 -->
    <el-dialog :visible.sync="dialogVisible.video" width="500px" :title="`${mode === 'add' ? '新增' : '编辑'}视频配置信息`" center style="z-index: 9999">
      <el-form label-position="right" label-width="120px" :model="form" size="mini">
        <el-row :gutter="10">
          <el-col :span="22">
            <el-form-item label="价格(撩币)">
              <el-input v-model="form.price" type="number" min="0" :step="0.1" />
            </el-form-item>
            <el-form-item label="类型">
              <el-select v-model="form.type" placeholder="请选择">
                <el-option v-for="(value, key) in map.type" :key="key" :value="key" :label="value" />
              </el-select>
            </el-form-item>
            <el-form-item label="视频路径">
              <div class="icon-container" @click="fakeClick('videoUrl')">
                <i v-if="!form.videoUrl" class="el-icon-plus" />
                <video v-else :src="form.videoUrl" style="width: 100%; height: 100%" />
              </div>

            </el-form-item>
            <el-form-item label="备注">
              <el-input v-model="form.remark" />
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>
      <input type="file" class="videoUrl" style="visibility: hidden" @change="val=>uploadFile(val,['form','videoUrl'])">
      <div slot="footer" class="dialog-footer">
        <el-button
          size="small"
          @click="dialogVisible.video=false"
        >取 消</el-button>
        <el-button type="primary" :loading="tableData.loading" size="small" @click="updateSubmit">提交</el-button>
      </div>
    </el-dialog>
    <!-- 大视频 -->
    <el-dialog
      title="视频展示"
      center
      :visible.sync="dialogVisible.imgVisible"
      width="30%"
    >
      <video :src="editImg.videoUrl" controls="controls" />

    </el-dialog>
  </div>
</template>

<script>
import { userVideoList, updateUserVideo, deleteBatchVideo } from '@/api/user'
import { initForm, copyObject, clearEmptyItem } from '@/utils/index'
import { uploadQNImg } from '@/api/user'
import Pagination from '@/components/Pagination'
export default {
  name: 'UserVideo',
  components: {
    Pagination
  },
  data() {
    return {
      mode: '',
      sels: [],
      tableData: {
        loading: false,
        array: [],
        row: {}
      },
      pager: {
        pageNo: 1,
        pageSize: 10,
        total: 0
      },
      map: {
        type: {
          0: '免费',
          1: 'vip',
          2: '付费'
        }
      },

      dialogVisible: {
        video: false,
        imgVisible: false
      },
      editImg: '',
      form: {
        price: '',
        remark: '',
        type: '',
        userId: '',
        videoUrl: ''

      }
    }
  },

  created() {
    this.fetchData()
  },
  methods: {

    fetchData() {
      const id = this.$route.query.id
      this.tableData.loading = true
      const _form = Object.assign({
        userId: id,
        pageNo: this.pager.pageNo,
        pageSize: this.pager.pageSize
      })
      userVideoList(_form).then(res => {
        const { result = {}} = res
        this.tableData.array = result.records
        this.tableData.total = result.total
      }).finally(_ => {
        this.tableData.loading = false
      })
    },
    showDialog(mode, item) {
      this.mode = mode
      this.tableData.row = item || {}
      this.form = initForm(this.form)
      this.form.userId = this.$route.query.id
      if (mode === 'edit') {
        this.form = copyObject(this.form, item, { numberToString: true })
      }
      this.dialogVisible.video = true
    },
    updateSubmit() {
      this.tableData.loading = true
      let _form = Object.assign({ id: this.tableData.row.id }, { userId: this.tableData.row.userId }, this.form)
      _form = clearEmptyItem(_form)
      updateUserVideo(_form, this.mode).then(res => {
        this.$message.success(res.message)
        this.dialogVisible.video = false
        this.fetchData()
      }).finally(_ => {
        this.tableData.loading = false
      })
    },
    fakeClick(className) {
      const fileInput = document.querySelector(`input[type=file].${className}`)
      fileInput.click()
    },
    uploadFile(e, target) {
      const files = e.target.files
      if (files.length) {
        const formData = new FormData()
        formData.append('multipartFile', files[0])
        uploadQNImg(formData).then(res => {
          this[target[0]][target[1]] = res.data
        })
      }
    },
    selsChange(sels) {
      this.sels = sels
    },
    deleteFileOrDirectory() {
      const ids = this.sels.map((row) => row.id).join()
      this.$confirm('确定要删除选中的视频配置信息吗?', '提示')
        .then(() => {
          deleteBatchVideo({
            ids: ids
          }).then((data) => {
            this.$message.success(data.message)
            this.fetchData()
          })
        })
        .catch((error) => {
          console.log(error)
        })
    },
    handlePagerChange(val) {
      this.pager.pageNo = val.index
      this.pager.pageSize = val.size
      this.fetchData()
    },
    changeImg(row) {
      this.dialogVisible.imgVisible = true
      this.editImg = row
    }
  }
}

</script>
<style scoped lang="scss">
/* 新增图标 */
.icon-container{
  width: 80px;
  height: 80px;
  border-radius: 4px;
  border: 1px dashed #ccc;
  position: relative;
  cursor: pointer;
  i{
    display: block;
    font-size: 24px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}
</style>
