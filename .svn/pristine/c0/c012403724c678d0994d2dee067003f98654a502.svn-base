<template>
  <div class="app-container">
    <div class="header">
      <div class="header-left">
        公告配置
      </div>
      <div class="header-right">
        <el-button type="danger" size="small" :disabled="sels.length === 0" @click="deleteFileOrDirectory(sels)">批量删除</el-button>
        <el-button type="primary" size="small" @click="showDialog('add')">新增</el-button>
      </div>
    </div>
    <el-table
      v-loading="tableData.loading"
      :data="tableData.array"
      border
      fit
      highlight-current-row
      @selection-change="selsChange"
    >
      <!-- 复选框 -->
      <el-table-column type="selection" align="center" width="55" />
      <el-table-column align="center" label="公告图片" width="150">
        <template slot-scope="scope"> <el-image
          style="width: 100px; height: 100px"
          class="headJig"
          :src="scope.row.images"
          @click="changeImg(scope.row)"
        /></template>
      </el-table-column>
      <el-table-column align="center" label="公告内容">
        <template slot-scope="scope">{{ scope.row.content }}</template>
      </el-table-column>
      <el-table-column align="center" label="备注">
        <template slot-scope="scope">{{ scope.row.remark }}</template>
      </el-table-column>
      <el-table-column align="center" label="是否提醒">
        <template slot-scope="scope">{{ map.piles[scope.row.type] }}</template>
      </el-table-column>
      <el-table-column align="center" label="时间">
        <template slot-scope="scope">{{ scope.row.time }}</template>
      </el-table-column>
      <el-table-column align="center" label="操作" width="150px">
        <template slot-scope="scope" class="button">
          <el-row :gutter="5">
            <el-col :span="12">
              <el-button size="mini" class="handle" style="width: 100%" @click="handleClick(scope.row)">查看</el-button>
            </el-col>
            <el-col :span="12" size="mini" tyle="margin-top: 5px">
              <el-button size="mini" class="handle" style="width: 100%" @click="showDialog('edit',scope.row)">编辑</el-button>
            </el-col></el-row></template>
      </el-table-column>
    </el-table>
    <pagination
      :pager-index="pager.pageNo"
      :pager-size="pager.pageSize"
      :pager-total="pager.total"
      @pagination-change="handlePagerChange"
    />
    <!-- 公告的模态框-->
    <el-dialog
      :visible.sync="dialogVisible.affiche"
      width="400px"
      :title="`${mode === 'add' ? '新增' : '编辑'}公告配置信息`"
      center
      style="z-index: 9999"
    >
      <el-form ref="form" :rules="rules" label-position="right" label-width="100px" :model="form" size="mini">
        <el-row :gutter="5">
          <el-col :span="20">
            <el-form-item label="公告图片" prop="icon">
              <div class="icon-container" @click="fakeClick('images')">
                <i v-if="!form.images" class="el-icon-plus" />
                <img v-else :src="form.images" style="width: 100%; height: 100%" alt="">
              </div>
            </el-form-item>
            <el-form-item label="公告内容" prop="content">
              <el-input
                v-model="form.content"
                type="textarea"
                autosize
                placeholder="请输入内容"
              />
            </el-form-item>
            <el-form-item label="备注" prop="remark">
              <el-input
                v-model="form.remark"
                type="textarea"
                autosize
                placeholder="请输入内容"
              />

            </el-form-item>
            <el-form-item label="是否提醒" prop="type">
              <el-select v-model="form.type" placeholder="请选择">
                <el-option v-for="(value, key) in map.piles" :key="key" :value="key" :label="value" />
              </el-select>
            </el-form-item>

          </el-col>
        </el-row>
      </el-form>
      <input type="file" style="visibility: hidden" class="images" @change="val => uploadFile(val, ['form','images'])">
      <div slot="footer" class="dialog-footer">
        <el-button size="small" @click="dialogVisible.affiche=false">取 消</el-button>
        <el-button type="primary" :loading="tableData.loading" size="small" @click="updateSubmit('form')">提交</el-button>
      </div>
    </el-dialog>
    <!-- 查看全部 -->
    <el-dialog
      title="公告信息"
      center
      :visible.sync="handleVisible"
      width="30%"
    >
      <div class="box">
        <div class="one">
          <span>时间:</span>
          <el-input v-model="handleRow.time" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>是否提醒:</span>
          <el-input v-model="map.piles[handleRow.type]" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>备注:</span>
          <el-input v-model="handleRow.remark" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>公告图片:</span>
          <el-input v-model="handleRow.images" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>公告内容:</span>
          <el-input v-model="handleRow.content" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>ID:</span>
          <el-input v-model="handleRow.id" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>图标:</span>
          <el-input v-model="handleRow.icon" :disabled="true" size="mini" />
        </div>
      </div>
    </el-dialog>
    <!-- 大头像 -->

    <el-dialog
      title="公告图片展示"
      center
      :visible.sync="imgVisible"
      width="30%"
    >
      <el-image :src="editImg.images" />
    </el-dialog>
  </div>
</template>

<script>
import { initForm, copyObject, clearEmptyItem } from '@/utils/index'
import Pagination from '@/components/Pagination'
import { noticeList, deleteBatch, afficheAdd } from '@/api/affiche'

import { uploadQNImg } from '@/api/user'
export default {
  components: {
    Pagination
  },

  data() {
    return {
      mode: '', // 新增用
      tableData: {
        array: [],
        row: {},
        loading: false
      },
      // 分页的
      pager: {
        pageNo: 1,
        pageSize: 10,
        total: 0
      },
      sels: [],
      dialogVisible: {
        affiche: false,
        community: false
      },
      form: { // 用于新增
        content: '', // 公告内容
        images: '', // 图片
        remark: '', // 备注
        type: '', // 是否强制提醒
        id: ''
      },
      editRow: [], // 存储编辑
      map: {
        piles: {
          1: '是',
          2: '否'
        }
      },
      handleVisible: false, // 查看的显示
      handleRow: [], // 存查看
      imgVisible: false, // 图片放大
      editImg: [], // 大图标
      rules: {
        content: [{ required: true, message: '请输入公告内容', trigger: 'blur' }],
        // icon: [{ required: true, message: '请选择图片', trigger: 'change' }],
        remark: [{ required: true, message: '请输入备注', trigger: 'blur' }]
      }
    }
  },
  created() {
    this.fetchData()
  },
  methods: {
    //   查询
    fetchData() {
      this.tableData.loading = true
      const _form = Object.assign({
        pageNo: this.pager.pageNo, // 页数
        pageSize: this.pager.pageSize // 条数
      }, this.filter)
      noticeList(_form)
        .then((res) => {
          const { result = {}} = res
          this.tableData.array = result.records
          this.pager.total = result.total // 总数
        }).finally(_ => {
          this.tableData.loading = false
        })
    },
    // 复选框的操作
    selsChange(sels) {
      this.sels = sels
    },
    // 批量删除
    deleteFileOrDirectory() {
      const ids = this.sels.map((form) => form.id).join()
      //   console.log(typeof (ids))
      this.$confirm('确定要删除选中的公告配置信息吗?', '提示')
        .then(() => {
          deleteBatch({
            ids: ids
          }).then((data) => {
            this.$message.success(data.message)
            this.fetchData()
            // console.log(data.success)
          })
        })
        .catch((error) => {
          console.log(error)
        })
    },
    // 点击新增
    showDialog(mode, item) {
      this.mode = mode
      this.tableData.row = item || {}
      this.form = initForm(this.form)
      if (mode === 'edit') {
        this.form = copyObject(this.form, item, { numberToString: true })
      }
      this.dialogVisible.affiche = true
    },
    //  提交
    updateSubmit(formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
          this.tableData.loading = true
          let _form = Object.assign({ id: this.tableData.row.id }, this.form)
          _form = clearEmptyItem(_form)
          afficheAdd(_form, this.mode).then(res => {
            this.tableData.loading = false
            this.$message.success(res.message)
            this.dialogVisible.affiche = false
            this.fetchData()
          }).catch(error => {
            console.log(error)
            this.dialogVisible.affiche = false
          })
        } else {
          console.log('error submit!!')
          return false
        }
      })
    },
    fakeClick(className) {
      const fileInput = document.querySelector(`input[type=file].${className}`)
      fileInput.click()
    },
    // 查看详情
    handleClick(row) {
      this.handleVisible = true
      this.handleRow = row
    },
    // 点击编辑
    handleEdit(row) {
      this.editVisible = true
      this.editRow = row
    },
    // 取消编辑
    hideEdit() {
      this.editVisible = false
    },
    // 分页
    handlePagerChange(val) {
      this.pager.pageNo = val.index
      this.pager.pageSize = val.pageSize
      this.fetchData()
    },
    // 新增图标
    uploadFile(e, target) {
      const files = e.target.files
      if (files.length) {
        const formData = new FormData()
        formData.append('multipartFile', files[0])
        uploadQNImg(formData).then((res) => {
          // 新增的
          this[target[0]][target[1]] = res.data
        })
      }
    },
    // 页面显示的大图标
    changeImg(row) {
      this.imgVisible = true
      this.editImg = row
    }
  }
}

</script>
<style scoped   lang="scss">
.header{
    width: 100%;
    height: 60px;
    line-height: 60px;
    display: flex;
}
 .header  .header-left{
    flex: 1;
    font-weight: 500;
    font-size:20px ;
}
.header  .header-right{
    width: 200px;
}

.box {
  box-sizing: border-box;
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
}
.one {
  display: flex;
   .el-input{
    line-height: 40px;
  }
}
.one span {
  width: 100px;
  text-align: left;
  height: 40px;
  line-height: 40px;
}
.el-input {
  background: content-box;
}

/* 新增图标 */
.icon-container{
  width: 80px;
  height: 80px;
  border-radius: 4px;
  border: 1px dashed #ccc;
  position: relative;
  cursor: pointer;
  i{
    display: block;
    font-size: 24px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}
/* 页面显示的图标 */
.headJig{
  cursor: pointer;
}
// 按钮
.handle{
  padding: 8px 10px;
}
</style>
