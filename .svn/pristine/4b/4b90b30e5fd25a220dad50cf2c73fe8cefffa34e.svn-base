<template>
  <div class="app-container">
    <!-- <div class="header">
      <el-form inline size="mini">
        <el-form-item>
          <el-input v-model="filter.id" placeholder="请输入id" style="width:200px" />
        </el-form-item>
        <el-button type="primary" size="mini" icon="el-icon-search" @click="changeId" />
      </el-form>
    </div> -->
    <div class="top">
      <div class="top-left">
        机器人模拟消息发送
      </div>
      <div class="top-right">
        <el-button type="danger" size="small" :disabled="sels.length === 0" @click="deleteFileOrDirectory(sels)">批量删除</el-button>
        <el-button type="primary" size="small" @click="showDialog('add')">新增</el-button>
      </div>
    </div>
    <el-table
      v-loading="tableData.loading"
      :data="tableData.array"
      border
      fit
      highlight-current-row
      @selection-change="selsChange"
    >
      <el-table-column type="selection" align="center" />
      <el-table-column align="center" label="机器人名">
        <template slot-scope="scope">{{ scope.row.robotName }}</template>
      </el-table-column>
      <el-table-column align="center" label="发送内容">
        <template slot-scope="scope">{{ scope.row.content }}</template>
      </el-table-column>
      <el-table-column align="center" label="是否定时发送">
        <template slot-scope="scope">{{ map.isQuatrz[scope.row.isQuatrz] }}</template>
      </el-table-column>
      <el-table-column align="center" label="机器人环信号">
        <template slot-scope="scope">{{ scope.row.robotIm }}</template>
      </el-table-column>
      <el-table-column align="center" label="定时发送时间">
        <template slot-scope="scope">{{ scope.row.sendTime }}</template>
      </el-table-column>
      <!-- <el-table-column align="center" label="接收方渠道id">
        <template slot-scope="scope">{{ scope.row.toUserDis }}</template>
      </el-table-column> -->
      <el-table-column align="center" label="接收方昵称">
        <template slot-scope="scope">{{ scope.row.toUserNames }}</template>
      </el-table-column>
      <el-table-column align="center" label="接收方账号类型">
        <template slot-scope="scope">{{ map.objType[scope.row.objType] }}</template>
      </el-table-column>
      <el-table-column align="center" label="接收方性别">
        <template slot-scope="scope">{{ map.toUserGender[scope.row.toUserGender] }}</template>
      </el-table-column>
      <el-table-column align="center" label="接收方环信号">
        <template slot-scope="scope">{{ scope.row.toUserIms }}</template>
      </el-table-column>
      <el-table-column align="center" label="接受方数量">
        <template slot-scope="scope">{{ scope.row.toUserNum }}</template>
      </el-table-column>
    </el-table>
    <pagination
      :pager-size="pager.pageSize"
      :pager-index="pager.pageNo"
      :pager-total="pager.total"
      @pagination-change="handlePagerChange"
    />

    <el-dialog :visible.sync="dialogVisible.robot" width="550px" :title="`${mode === 'add' ? '新增' : '编辑'}机器人发送信息`" center style="z-index: 9999">
      <el-form ref="form" label-position="right" label-width="120px" :validate-on-rule-change="false" :model="form" size="mini">
        <el-row :gutter="10">
          <el-col :span="22">
            <el-form-item label="发送内容" prop="title">
              <el-input v-model="form.content" />
            </el-form-item>
            <el-form-item label="接受方渠道id" prop="title">
              <el-select v-model="form.toUserDis" placeholder="请选择">
                <el-option v-for="(value,key) in map.options" :key="key" :value="key" :label="value" />
              </el-select>
            </el-form-item>
            <el-form-item label="接收方数量" prop="title">
              <el-input v-model="form.toUserNum" />
            </el-form-item>
            <el-form-item label="是否定时发送">
              <el-select v-model="form.isQuatrz" clearable placeholder="请选择">
                <el-option v-for="(value, key) in map.isQuatrz" :key="key" :value="key" :label="value" />
              </el-select>
            </el-form-item>
            <el-form-item v-if="form.isQuatrz==1" label="定时发送时间" prop="title">
              <el-date-picker
                v-model="form.sendTime"
                type="datetime"
                format="yyyy-MM-dd HH:mm:ss"
                value-format="yyyy-MM-dd HH:mm:ss"
                placeholder="选择日期"
              />
            </el-form-item>
            <el-form-item label="接收方账号类型">
              <el-select v-model="form.objType" placeholder="请选择">
                <el-option v-for="(value, key) in map.objType" :key="key" :value="key" :label="value" />
              </el-select>
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button
          size="small"
          @click="dialogVisible.robot=false"
        >取 消</el-button>
        <el-button type="primary" :loading="tableData.loading" size="small" @click="updateSubmit">提交</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { robotPushList, updateRobotPush, getMap, deleteBatch } from '@/api/robot'
import { initForm, clearEmptyItem } from '@/utils/index'
import Pagination from '@/components/Pagination'
export default {
  components: {
    Pagination
  },
  data() {
    return {
      mode: '',
      tableData: {
        array: [],
        loading: false,
        row: {}
      },
      pager: {
        pageNo: 1,
        pageSize: 10
      },
      form: {
        content: '',
        isQuatrz: '',
        objType: '',
        sendTime: '',
        toUserNum: '',
        toUserDis: ''
      },
      dialogVisible: {
        robot: false
      },
      sels: [],
      map: {
        options: {},
        isQuatrz: {
          1: '是',
          0: '否'
        },

        toUserGender: {
          1: '男',
          2: '女'
        },
        objType: {
          0: '普通用户',
          1: '会员用户',
          3: '全服推送',
          4: '最新注册的用户',
          5: '低活跃度用户'
        }

      }

    }
  },
  created() {
    this.fetchData()
    this.getMap()
  },
  methods: {
    fetchData() {
      this.tableData.loading = true
      const _form = Object.assign({
        pageNo: this.pager.pageNo,
        pageSize: this.pager.pageSize
      })
      //   _form.toUserNum = parseInt(_form.toUserNum)
      robotPushList(_form).then(res => {
        const { result = {}} = res

        this.tableData.array = result.records
        this.pager.total = result.total
        // console.log(this.tableData.array)
      }).finally(_ => {
        this.tableData.loading = false
      })
    },
    //   渠道id
    getMap() {
      getMap().then(res => {
        if (Array.isArray(res.result)) {
          res.result.forEach(item => {
            const _keys = Object.keys(item)
            _keys.forEach(key => {
              this.map.options[key] = item[key]
            })
          })
        }
      })
    },

    showDialog(mode, item) {
      this.mode = mode
      this.tableData.row = item || {}
      this.form = initForm(this.form)
      this.dialogVisible.robot = true
    },

    updateSubmit() {
      this.tableData.loading = true
      let _form = Object.assign({ id: this.tableData.row.id }, this.form)
      _form = clearEmptyItem(_form)
      updateRobotPush(_form, this.mode).then(res => {
        this.tableData.loading = false
        this.$message.success(res.message)
        this.dialogVisible.robot = false
        this.fetchData()
      }).catch(error => {
        this.dialogVisible.robot = false
        console.log(error)
      })
    },
    handlePagerChange(val) {
      this.pager.pageNo = val.index
      this.pager.pageSize = val.size
      this.fetchData()
    },
    selsChange(sels) {
      this.sels = sels
    },
    deleteFileOrDirectory() {
      const ids = this.sels.map((row) => row.id).join()
      this.$confirm('确定要删除选中的机器人信息吗', '提示')
        .then(() => {
          deleteBatch({
            ids: ids
          }).then((data) => {
            this.$message.success(data.message)
            this.fetchData()
          })
        })
        .catch((error) => {
          console.log(error)
        })
    }
  }
}

</script>
<style scoped>
</style>
