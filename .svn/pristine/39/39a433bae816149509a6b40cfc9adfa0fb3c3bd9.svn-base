<template>
  <div class="app-container">
    <div v-if="!$route.query.id" class="header">
      <el-form inline size="mini">
        <el-form-item>
          <el-input v-model="filter.user" placeholder="请输入用户名" style="width:140px" />
        </el-form-item>
        <el-form-item>
          <el-input v-model="filter.title" placeholder="请输入标题" style="width:140px" />
        </el-form-item>
        <el-form-item>
          <el-select v-model="filter.type" clearable placeholder="请选择类型">
            <el-option v-for="(value, key) in map.type" :key="key" :value="key" :label="value" />
          </el-select>
        </el-form-item>
        <el-button type="primary" size="mini" icon="el-icon-search" @click="fetchData" />
      </el-form>
    </div>
    <div class="top">
      <div class="top-left">社区相关</div>
      <div class="top-right">
        <el-button size="small" :disabled="multipleTable.length === 0" type="danger" @click="deleteBatch()">批量删除</el-button>
        <!-- <el-button size="small" type="primary" @click="showDialog('add')">新增</el-button> -->
      </div>
    </div>
    <el-table
      v-loading="tableData.loading"
      :data="tableData.array"
      border
      fit
      highlight-current-row
      @selection-change="selsChange"
    >
      <el-table-column
        align="center"
        type="selection"
      />
      <el-table-column
        align="center"
        prop="user"
        label="用户"
      />
      <el-table-column
        align="center"
        prop="title"
        label="标题"
      />
      <el-table-column
        align="center"
        prop="content"
        :show-overflow-tooltip="true"
        label="内容"
      />
      <el-table-column
        align="center"
        prop="type"
        label="类型"
      >
        <template slot-scope="scope">
          <span>{{ map.type[scope.row.type] }}</span>
        </template>
      </el-table-column>
      <el-table-column
        align="center"
        prop="label"
        label="标签"
      />
      <el-table-column
        align="center"
        prop="type"
        label="是否点赞/点赞数"
      >
        <template slot-scope="scope">
          {{ map.isLike[scope.row.isLike] || '否' }}/{{ scope.row.likeNum || 0 }}
        </template>
      </el-table-column>
      <el-table-column
        align="center"
        prop="position"
        label="定位"
      />
      <el-table-column
        align="center"
        prop="createTime"
        label="创建时间"
      />
      <el-table-column
        align="center"
        prop="updateTime"
        label="修改时间"
      />
      <el-table-column
        align="center"
        label="操作"
      >
        <template slot-scope="scope">
          <el-row :gutter="15">
            <el-col :span="10" size="mini">
              <el-button size="mini" style="padding:5px 27px;margin-left:10px" @click="showDialog('edit', scope.row)">编辑</el-button>
              <el-button size="mini" @click="handleComments(scope.row)">查看评论</el-button>
              <el-button size="mini" @click="handleLike(scope.row)">查看点赞</el-button>
            </el-col>
          </el-row>
        </template>
      </el-table-column>
    </el-table>
    <pagination
      :pager-size="pager.pageSize"
      :pager-index="pager.pageNo"
      :pager-total="pager.total"
      @pagination-change="handlePagerChange"
    />

    <!-- 动态模态框 -->
    <el-dialog :visible.sync="dialogVisible.community" width="460px" :title="`${mode === 'save' ? '新增' : '编辑'}动态`" center>
      <el-form label-position="right" label-width="100px" :model="form" size="mini">
        <el-form-item label="标题">
          <el-input v-model="form.title" />
        </el-form-item>
        <el-form-item label="内容">
          <el-input v-model="form.content" type="textarea" :rows="3" />
        </el-form-item>
        <el-form-item label="类型">
          <el-select v-model="form.type" placeholder="请选择">
            <el-option v-for="(value, key) in map.type" :key="key" :value="key" :label="value" />
          </el-select>
        </el-form-item>
        <el-form-item v-if="form.type == 1" label="图片">
          <div class="content-border">
            <div v-for="item in photoFileList" :key="item" class="image-content">
              <img alt="" style="width:100%;height:100%" :src="item">
            </div>
            <div class="image-content" @click="fakeClick('photos')">
              <i class="el-icon-plus" style="position:absolute; top: 50%; left: 50%;transform: translate(-50%, -50%); cursor:pointer" />
            </div>
          </div>
          <input type="file" style="visibility: hidden" class="photos" @change="val => uploadFile(val, null, handlePhotos)">
        </el-form-item>
        <el-form-item v-if="form.type == 2" label="视频">
          <div class="icon-container" @click="fakeClick('upload')">
            <i v-if="!form.infoUrl" class="el-icon-upload" />
            <video v-if="form.infoUrl && form.type == 2" :src="form.infoUrl" style="width: 100%; height: 100%" />

          </div>
        </el-form-item>
        <el-form-item label="是否点赞">
          <el-select v-model="form.isLike" placeholder="请选择">
            <el-option v-for="(value, key) in map.isLike" :key="key" :value="key" :label="value" />
          </el-select>
        </el-form-item>
        <el-form-item label="标签">
          <el-input v-model="form.label" />
        </el-form-item>
        <el-form-item label="点赞数">
          <el-input v-model="form.likeNum" type="number" min="0" />
        </el-form-item>
        <el-form-item label="定位">
          <el-input v-model="form.position" />
        </el-form-item>
      </el-form>
      <input type="file" style="visibility: hidden" class="upload" @change="uploadFile">
      <div slot="footer" class="dialog-footer">
        <el-button size="small" @click="dialogVisible.community = false">取 消</el-button>
        <el-button type="primary" size="small" @click="updateSubmit">提 交</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import Pagination from '@/components/Pagination'
import { updateCommunity, queryCommunity, deleteCommunity, queryCommunityById } from '@/api/community'
import { uploadQNImg } from '@/api/user'
import { initForm, copyObject, clearEmptyItem } from '@/utils/index'
export default {
  components: {
    Pagination
  },
  data() {
    return {
      mode: '',
      dialogVisible: {
        community: false,
        handleComments: false
      },
      multipleTable: [],
      filter: {
        title: '',
        user: '',
        type: ''
      },
      map: {
        isLike: {
          1: '是',
          2: '否'
        },
        type: {
          0: '文字',
          1: '图片',
          2: '视频'
        }
      },
      tableData: {
        array: [],
        row: {},
        loading: false
      },
      form: {
        user: '',
        title: '',
        content: '',
        infoUrl: '',
        isLike: '',
        label: '',
        likeNum: '',
        position: '',
        type: ''
        // createTime: ''
      },
      pager: {
        pageNo: 1,
        pageSize: 10,
        total: 0
      },
      photoFileList: []
    }
  },
  created() {
    this.fetchData()
  },
  methods: {
    selsChange(sels) {
      this.multipleTable = sels
    },
    handlePagerChange(val) {
      this.pager.pageNo = val.index
      this.pager.pageSize = val.size
      this.fetchData()
    },

    showDialog(mode, item) {
      this.mode = mode
      this.tableData.row = item || {}
      this.form = initForm(this.form)
      if (mode === 'edit') {
        this.form = copyObject(this.form, item, { numberToString: true })
        if (this.form.type === '1') {
          this.photoFileList = this.form.infoUrl.split(',') || []
        }
      }
      this.dialogVisible.community = true
    },

    fakeClick(className) {
      const fileInput = document.querySelector(`input[type=file].${className}`)
      fileInput.click()
    },

    updateSubmit() {
      let _form = Object.assign({ id: this.tableData.row.id }, this.form)
      _form = clearEmptyItem(_form)
      updateCommunity(_form, this.mode).then(res => {
        this.$message.success(res.message)
        this.dialogVisible.community = false
        this.fetchData()
      })
    },
    uploadFile(e, func) {
      const files = e.target.files
      if (files.length) {
        const formData = new FormData()
        formData.append('multipartFile', files[0])
        uploadQNImg(formData).then((res) => {
          if (func) {
            func(res)
          } else {
            this.form.infoUrl = res.data
          }
        })
      }
    },
    fetchData() {
      const id = this.$route.query.id
      this.tableData.loading = true

      if (id) {
        const _form = {
          pageNo: this.pager.pageNo, // 页数
          pageSize: this.pager.pageSize, // 条数
          userId: id
        }
        queryCommunityById(_form)
          .then((res) => {
            const { result = {}} = res
            this.tableData.array = result.records
            this.pager.total = result.total // 总数
          }).finally(_ => {
            this.tableData.loading = false
          })
      } else {
        const _form = Object.assign({
          pageNo: this.pager.pageNo, // 页数
          pageSize: this.pager.pageSize // 条数
        }, this.filter)
        queryCommunity(_form)
          .then((res) => {
            const { result = {}} = res
            this.tableData.array = result.records
            this.pager.total = result.total // 总数
          }).finally(_ => {
            this.tableData.loading = false
          })
      }
    },
    deleteBatch() {
      const ids = this.multipleTable.map((row) => row.id).join(',')
      console.log(ids)
      this.$confirm('确定要删除选中的动态吗?', '提示')
        .then(() => {
          deleteCommunity({
            ids: ids
          }).then((data) => {
            this.$message.success(data.message)
            this.fetchData()
          })
        })
    },
    // 查看评论
    handleComments(row) {
      this.$router.push({ path: '/users/comments', query: { id: row.id }})
    },
    // 查看点赞
    handleLike(row) {
      this.$router.push({ path: '/users/giveLike', query: { id: row.id }})
    }
  }
}
</script>

<style lang="scss">
.icon-container{
  width: 240px;
  height: 140px;
  border-radius: 4px;
  border: 1px dashed #ccc;
  position: relative;
  cursor: pointer;
  i{
    display: block;
    font-size: 24px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}
.content-border{
  width: 100%;
  height: 120px;
  border-radius: 4px;
  border: 1px dashed #ccc;
  padding: 5px;
  overflow-y: auto;
}
.image-content{
  width: 50px;
  height: 50px;
  margin-right: 5px;
  position: relative;
  display: inline-block;
}
</style>
