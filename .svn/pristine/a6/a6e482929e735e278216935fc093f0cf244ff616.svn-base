<template>
  <div class="app-container">
    <div class="top">
      <div class="top-left">商品订单</div>
      <div class="top-right">
        <el-button size="small" :disabled="sels.length === 0" type="danger" @click="deleteFileOrDirectory(sels)">批量删除</el-button>
        <!-- <el-button type="primary" size="small" @click="showDialog('add')">新增</el-button> -->
      </div>
    </div>
    <el-table
      v-loading="tableData.loading"
      :data="tableData.array"
      border
      fit
      highlight-current-row
      @selection-change="selsChange"
    >
      <el-table-column type="selection" align="center" />
      <el-table-column align="center" label="用户名">
        <template slot-scope="scope">{{ scope.row.userName }}</template>
      </el-table-column>
      <el-table-column align="center" label="商品名">
        <template slot-scope="scope">{{ scope.row.goodsName }}</template>
      </el-table-column>
      <el-table-column align="center" label="商品logo">
        <template slot-scope="scope">{{ scope.row.goodsLogo }}</template>
      </el-table-column>
      <el-table-column align="center" label="收获手机号">
        <template slot-scope="scope">{{ scope.row.phone }}</template>
      </el-table-column>
      <el-table-column align="center" label="支付方式">
        <template slot-scope="scope">{{ map.payType[scope.row.payType] }}</template>
      </el-table-column>
      <el-table-column align="center" label="单价">
        <template slot-scope="scope">{{ scope.row.price }}</template>
      </el-table-column>
      <el-table-column align="center" label="优惠">
        <template slot-scope="scope">{{ scope.row.disCount }}</template>
      </el-table-column>
      <el-table-column align="center" label="数量">
        <template slot-scope="scope">{{ scope.row.num }}</template>
      </el-table-column>
      <el-table-column align="center" label="总价">
        <template slot-scope="scope">{{ scope.row.totalPrice }}</template>
      </el-table-column>
      <el-table-column align="center" label="订单状态">
        <template slot-scope="scope">{{ map.status[scope.row.status] }}</template>
      </el-table-column>
      <el-table-column align="center" label="备注">
        <template slot-scope="scope">{{ scope.row.remark }}</template>
      </el-table-column>

    </el-table>
    <pagination
      :pager-index="pager.pageNo"
      :pager-size="pager.pageSize"
      :pager-total="pager.total"
      @pagination-change="handlePagerChange"
    />

    <el-dialog :visible.sync="dialogVisible.goods" width="400px" :title="`${mode === 'add' ? '新增' : '编辑'}商品订单信息`" center style="z-index: 9999">
      <el-form ref="form" label-position="right" :validate-on-rule-change="false" label-width="120px" :model="form" size="mini">
        <el-row :gutter="5">
          <el-col :span="20">

            <el-form-item label="用户名">
              <el-input v-model="form.userName" />
            </el-form-item>
            <el-form-item label="商品名">
              <el-input v-model="form.goodsName" />
            </el-form-item>
            <!-- <el-form-item label="商品logo">
              <div class="icon-container" @click="fakeClick('goodsLogo')">
                <i v-if="!form.goodsLogo" class="el-icon-plus" />
                <img
                  v-else
                  :src="form.goodsLogo"
                  style="width: 100%; height: 100%"
                  alt=""
                >
              </div>
            </el-form-item> -->
            <el-form-item label="收获手机号">
              <el-input v-model="form.phone" />
            </el-form-item>
            <el-form-item label="支付方式">
              <el-select v-model="form.payType" placeholder="请选择">
                <el-option v-for="(value,key) in map.payType" :key="key" :value="key" :label="value" />
              </el-select>
            </el-form-item>
            <el-form-item label="单价">
              <el-input v-model="form.price" />
            </el-form-item>
            <el-form-item label="优惠">
              <el-input v-model="form.disCount" />
            </el-form-item>
            <el-form-item label="数量">
              <el-input v-model="form.num" />
            </el-form-item>
            <el-form-item label="总价">
              <el-input v-model="form.totalPrice" />
            </el-form-item>
            <el-form-item label="备注">
              <el-input v-model="form.remark" />
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>
      <!-- <input type="file" style="visibility: hidden" class="bigLogo" @change="val => uploadFile(val, ['form','bigLogo'])">
      <input type="file" style="visibility: hidden" class="logo" @change="val => uploadFile(val, ['form','logo'])"> -->
      <div slot="footer" class="dialog-footer">
        <el-button
          size="small"
          @click="dialogVisible.goods=false"
        >取 消</el-button>
        <el-button type="primary" :loading="tableData.loading" size="small" @click="updateSubmit">提交</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { initForm, copyObject, clearEmptyItem } from '@/utils/index'
import { goodsOrder, updateGoodsOrder, deleteBatchs } from '@/api/goods'
import Pagination from '@/components/Pagination'
export default {
  components: {
    Pagination
  },
  data() {
    return {
      tableData: {
        array: [],
        row: {},
        loading: false
      },
      pager: {
        pageNo: 1,
        pageSize: 10,
        total: 0
      },
      dialogVisible: {
        goods: false
      },
      mode: '',
      form: {
        userName: '',
        remark: '',
        price: '',
        phone: '',
        payType: '',
        goodsName: '',
        goodsLogo: '',
        disCount: '',
        num: '',
        totalPrice: ''
      },
      map: {
        payType: {
          1: '支付宝',
          2: '微信',
          3: '银行卡'
        },
        status: {
          0: '待支付',
          1: '已支付',
          2: '已完成',
          3: '已关闭',
          4: '取消支付'
        }
      },
      sels: []
    }
  }, created() {
    this.fetchData()
  },
  methods: {
    fetchData() {
      this.tableData.loading = true
      const _form = Object.assign({
        pageNo: this.pager.pageNo, // 页数
        pageSize: this.pager.pageSize // 条数
      })
      goodsOrder(_form).then(res => {
        const { result = {}} = res
        this.tableData.array = result.records
        this.pager.total = result.total // 总数
      }).finally(_ => {
        this.tableData.loading = false
      })
    },
    showDialog(mode, item) {
      this.mode = mode
      this.tableData.row = item || {}
      this.form = initForm(this.form)
      if (mode === 'edit') {
        this.form = copyObject(this.form, item, { numberToString: true })
      }
      this.dialogVisible.goods = true
    },
    updateSubmit() {
      this.tableData.loading = true
      let _form = Object.assign({ id: this.tableData.row.id }, this.form)
      _form = clearEmptyItem(_form)
      updateGoodsOrder(_form, this.mode).then(res => {
        this.tableData.loading = false
        this.$message.success(res.message)
        this.dialogVisible.goods = false
        this.fetchData()
      }).catch(error => {
        console.log(error)
        this.dialogVisible.goods = false
      })
    },
    handlePagerChange(val) {
      this.pager.pageNo = val.index
      this.pager.pageSize = val.size
      this.fetchData()
    },
    selsChange(sels) {
      this.sels = sels
    },
    deleteFileOrDirectory() {
      const ids = this.sels.map(row => row.id).join()
      this.$confirm('确定要删除选中的商品订单信息吗?', '提示')
        .then(() => {
          deleteBatchs({
            ids: ids
          }).then((data) => {
            this.$message.success(data.message)
            this.fetchData()
          })
        })
        .catch((error) => {
          console.log(error)
        })
    }

  }
}

</script>
<style scoped lang="scss">
.icon-container{
     width: 80px;
     height: 80px;
     border-radius:4px;
     border: 1px dashed  #ccc;
      position: relative;
  cursor: pointer;
    i{
   display: block;
    font-size: 24px;
    position: absolute;
   top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    }

}
</style>
