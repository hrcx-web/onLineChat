<template>
  <div class="app-container">
    <div class="header">
      <el-form inline size="mini">
        <el-form-item>
          <el-input v-model="filter.cfgRemark" clearable placeholder="请输入备注" style="width:200px" />
        </el-form-item>
        <el-button type="primary" size="mini" icon="el-icon-search" @click="fetchDataS" />
      </el-form>
    </div>
    <div class="top">
      <div class="top-left">后台配置</div>
      <div class="top-right">
        <el-button type="danger" :disabled="sels.length === 0" size="small" @click="deleteFileOrDirectory(sels)">批量删除</el-button>
        <el-button type="primary" size="small" @click="showDialog('addCommon')">新增</el-button>
        <el-button type="success" size="small" @click="refresh">刷新缓存</el-button>
      </div>
    </div>

    <el-table
      v-loading="tableData.loading"
      :data="tableData.array"
      border
      fit
      highlight-current-row
      @selection-change="selsChange"
    >
      <!-- 复选框 -->
      <el-table-column type="selection" align="center" />
      <el-table-column align="center" label="配置名称">
        <template slot-scope="scope">{{ scope.row.cfgName }}</template>
      </el-table-column>
      <el-table-column align="center" label="属性名">
        <template slot-scope="scope">{{ scope.row.cfgKey }}</template>
      </el-table-column>
      <el-table-column align="center" label="配置类型">
        <template slot-scope="scope">{{ cfgType[scope.row.cfgType] }}</template>
      </el-table-column>
      <el-table-column align="center" label="配置值">
        <template slot-scope="scope">{{ scope.row.cfgValue }}</template>
      </el-table-column>
      <el-table-column align="center" label="备注">
        <template slot-scope="scope">{{ scope.row.cfgRemark }}</template>
      </el-table-column>
      <el-table-column label="操作" align="center">
        <template slot-scope="scope">
          <!-- <el-row :gutter="8">
            <el-col :span="2" size="mini" tyle="margin-top: 5px"> -->
          <el-button size="mini" @click="showDialog('updCommon' ,scope.row)">编辑</el-button>
          <!-- </el-col>
          </el-row> -->
        </template>
      </el-table-column>
    </el-table>
    <pagination
      :pager-index="pager.pageNo"
      :pager-size="pager.pageSize"
      :pager-total="pager.total"
      @pagination-change="handlePagerChange"
    />

    <!-- 后台配置信息 -->
    <el-dialog :visible.sync="dialogVisible.payConfig" width="500px" :title="`${mode === 'addCommon' ? '新增' : '编辑'}后台配置信息`" center style="z-index: 9999">
      <el-form label-position="right" label-width="100px" :validate-on-rule-change="false" :model="form" size="mini">
        <el-row :gutter="10">
          <el-col :span="22">
            <el-form-item label="配置名称">
              <el-input v-model="form.cfgName" size="mini" />
            </el-form-item>
            <el-form-item label="属性名">
              <el-input v-model="form.cfgKey" size="mini" />
            </el-form-item>
            <el-form-item label="配置类型">
              <el-select v-model="form.cfgType" placeholder="请选择">
                <el-option v-for="(value, key) in cfgType" :key="key" :value="key" :label="value" />
              </el-select>
            </el-form-item>
            <el-form-item label="配置值">
              <el-input
                v-model="form.cfgValue"
                type="textarea"
                autosize
                placeholder="请输入配置值"
                size="mini"
              />
            </el-form-item>
            <el-form-item label="备注">
              <el-input
                v-model="form.cfgRemark"
                type="textarea"
                autosize
                placeholder="请输入内容"
              />

            </el-form-item>

          </el-col>
        </el-row>
      </el-form>

      <div slot="footer" class="dialog-footer">
        <el-button
          size="small"
          @click="dialogVisible.payConfig=false"
        >取 消</el-button>
        <el-button type="primary" :loading="tableData.loading" size="small" @click="updateSubmit('form')">提交</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { queryCommon, updateSystem, deleteBatch, updCacheToComm } from '@/api/queryCommon'
import { initForm, copyObject, clearEmptyItem } from '@/utils/index'
import Pagination from '@/components/Pagination'
export default {
  components: {
    Pagination
  },
  data() {
    return {
      mode: '',
      tableData: {
        array: [],
        loading: false,
        row: {}
      },
      pager: {
        pageNo: 1,
        pageSize: 10,
        total: 0
      },
      dialogVisible: {
        payConfig: false

      },
      filter: {
        cfgRemark: ''
      },
      form: {
        cfgValue: '',
        cfgType: '',
        cfgRemark: '',
        cfgName: '',
        cfgKey: ''

      },
      sels: [],
      cfgType: {
        1: '普通配置',
        2: '密钥配置'
      }

    }
  },
  created() {
    this.fetchData()
  },
  methods: {
    fetchDataS() {
      this.tableData.loading = true
      const _form = Object.assign({
        page: 1,
        pageSize: this.pager.pageSize
      }, this.filter)
      queryCommon(_form).then(res => {
        const { result = {}} = res
        this.tableData.array = result.records
        this.pager.total = result.total // 总数
      }).finally(_ => {
        this.tableData.loading = false
      })
    },
    fetchData() {
      this.tableData.loading = true
      const _form = Object.assign({
        page: this.pager.pageNo,
        pageSize: this.pager.pageSize
      }, this.filter)
      queryCommon(_form).then(res => {
        const { result = {}} = res
        this.tableData.array = result.records
        this.pager.total = result.total // 总数
      }).finally(_ => {
        this.tableData.loading = false
      })
    },
    handlePagerChange(val) {
      this.pager.pageNo = val.index
      this.pager.pageSize = val.size
      this.fetchData()
    },
    // 点击新增
    showDialog(mode, item) {
      this.mode = mode
      this.tableData.row = item || {}
      this.form = initForm(this.form)
      if (mode === 'updCommon') {
        this.form = copyObject(this.form, item, {
          numberToString: true
        })
      }
      this.dialogVisible.payConfig = true
    },
    // 提交
    updateSubmit() {
      this.tableData.loading = true
      let _form = Object.assign({ id: this.tableData.row.id }, this.form)
      _form = clearEmptyItem(_form)
      updateSystem(_form, this.mode).then(res => {
        this.tableData.loading = false
        this.$message.success(res.message)
        this.dialogVisible.payConfig = false
        this.fetchData()
      }).catch(error => {
        console.log(error)
        this.dialogVisible.payConfig = false
        this.tableData.loading = false
      })
    },
    selsChange(sels) {
      this.sels = sels
    },
    deleteFileOrDirectory() {
      const ids = this.sels.map(list => list.id).join()
      this.$confirm('确定要删除选中的后台配置信息吗?', '提示')
        .then(() => {
          deleteBatch({
            id: ids
          }).then((data) => {
            this.$message.success(data.message)
            this.fetchData()
          })
        })
        .catch((error) => {
          console.log(error)
        })
    },
    // 刷新缓存
    refresh() {
      this.tableData.loading = true
      updCacheToComm().then(data => {
        this.tableData.loading = false
        this.$message.success(data.message)
      })
    }

  }
}
</script>
<style scoped>
</style>
