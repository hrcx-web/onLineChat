<template>
  <div class="app-container">
    <div class="header">
      <div class="header-left">VIP管理</div>
      <div class="header-right">
        <el-button size="small" type="danger" :disabled="sels.length === 0" @click="deleteFileOrDirectory(sels)">批量删除</el-button>
        <el-button type="primary" size="small" @click="showDialog('add')">新增</el-button>
      </div>
    </div>

    <el-table
      v-loading="tableData.loading"
      :data="tableData.array"
      border
      fit
      highlight-current-row
      @selection-change="selsChange"
    >
      <!-- 复选框 -->
      <el-table-column type="selection" align="center" />
      <el-table-column align="center" label="标题">
        <template slot-scope="scope">{{ scope.row.title }}</template>
      </el-table-column>
      <el-table-column align="center" property="icon" label="图标">
        <template slot-scope="scope"> <el-image
          style="width: 100px; height: 100px; cursor: pointer;"
          :src="scope.row.icon"
          @click="changeImg(scope.row)"
        /></template>
      </el-table-column>
      <el-table-column align="center" label="套餐类型">
        <template slot-scope="scope">{{ map.vipType[scope.row.vipType] }}</template>
      </el-table-column>
      <el-table-column align="center" label="价格类型">
        <template slot-scope="scope">{{ map.type[scope.row.type] }}</template>
      </el-table-column>
      <el-table-column align="center" label="是否默认选中">
        <template slot-scope="scope">{{ map.defaultSelect[scope.row.defaultSelect] }}</template>
      </el-table-column>
      <el-table-column align="center" label="原价">
        <template slot-scope="scope">{{ scope.row.originalCost }}</template>
      </el-table-column>
      <el-table-column align="center" label="定价">
        <template slot-scope="scope">{{ scope.row.cost }}</template>
      </el-table-column>
      <el-table-column align="center" label="特价">
        <template slot-scope="scope">{{ scope.row.pricingCost }}</template>
      </el-table-column>

      <el-table-column align="center" label="有效天数">
        <template slot-scope="scope">{{ scope.row.validity }}</template>
      </el-table-column>

      <el-table-column label="操作" width="150px" align="center">
        <template slot-scope="scope">
          <el-row :gutter="20">
            <el-col :span="10">
              <el-button size="mini" @click="handleClick(scope.row)">查看</el-button>
            </el-col>
            <el-col :span="10" size="mini" tyle="margin-top: 5px">
              <el-button size="mini" @click="showDialog('edit' ,scope.row)">编辑</el-button>
            </el-col>
          </el-row>
        </template>
      </el-table-column>
    </el-table>

    <pagination
      :pager-index="pager.pageNo"
      :pager-size="pager.pageSize"
      :pager-total="pager.total"
      @pagination-change="handlePagerChange"
    />
    <!-- vip信息模态框 -->
    <el-dialog :visible.sync="dialogVisible.vip" width="350px" :title="`${mode === 'add' ? '新增' : '编辑'}vip信息`" center style="z-index: 9999">
      <el-form ref="form" label-position="right" :rules="rules" label-width="100px" :validate-on-rule-change="false" :model="form" size="mini">
        <el-row :gutter="10">
          <el-col :span="20">
            <el-form-item label="标题" prop="title">
              <el-input v-model="form.title" />
            </el-form-item>
            <el-form-item label="图标">
              <div class="icon-container" @click="fakeClick('icon')">
                <i v-if="!form.icon" class="el-icon-plus" />
                <img
                  v-else
                  :src="form.icon"
                  style="width: 100%; height: 100%"
                  alt=""
                >
              </div>
            </el-form-item>
            <el-form-item label="套餐类型">
              <el-select v-model="form.vipType" placeholder="请选择">
                <el-option v-for="(value, key) in map.vipType" :key="key" :value="key" :label="value" />
              </el-select>
            </el-form-item>
            <el-form-item label="价格类型">
              <el-select v-model="form.type" placeholder="请选择">
                <el-option v-for="(value, key) in map.type" :key="key" :value="key" :label="value" />
              </el-select>
            </el-form-item>
            <el-form-item label="是否默认选中">
              <el-select v-model="form.defaultSelect" placeholder="请选择">
                <el-option v-for="(value, key) in map.defaultSelect" :key="key" :value="key" :label="value" />
              </el-select>
            </el-form-item>
            <el-form-item label="原价" prop="originalCost">
              <el-input-number v-model="form.originalCost" :step="0.1" size="mini" />
            </el-form-item>
            <el-form-item label="定价">
              <el-input-number v-model="form.cost" :step="0.1" size="mini" />
            </el-form-item>
            <el-form-item label="特价">
              <el-input-number v-model="form.pricingCost" :step="0.1" size="mini" />
            </el-form-item>
            <el-form-item label="有效天数">
              <el-input v-model="form.validity" />
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>
      <input type="file" style="visibility: hidden" class="icon" @change="val => uploadFile(val, ['form','icon'])">
      <div slot="footer" class="dialog-footer">
        <el-button
          size="small"
          @click="dialogVisible.vip=false"
        >取 消</el-button>
        <el-button type="primary" :loading="tableData.loading" size="small" @click="updateSubmit('form')">提交</el-button>
      </div>
    </el-dialog>
    <!-- 查看详情 -->
    <el-dialog
      title="VIP信息"
      center
      :visible.sync="checkVisible"
      width="680px"
    >
      <div class="box">
        <div class="one">
          <span>图标:</span>
          <el-input v-model="handleRow.icon" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>销量:</span>
          <el-input v-model="handleRow.salaryNum" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>价格类型:</span>
          <el-input v-model="map.type[handleRow.type]" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>套餐类型:</span>
          <el-input v-model="map.vipType[handleRow.vipType]" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>是否默认选中:</span>
          <el-input v-model="map.defaultSelect[handleRow.defaultSelect]" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>标题:</span>
          <el-input v-model="handleRow.title" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>原价:</span>
          <el-input v-model="handleRow.originalCost" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>定价:</span>
          <el-input v-model="handleRow.cost" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>特价:</span>
          <el-input v-model="handleRow.pricingCost" :disabled="true" size="mini" />
        </div>
        <div class="one">
          <span>有效天数:</span>
          <el-input v-model="handleRow.validity" :disabled="true" size="mini" />
        </div>

        <div class="one">
          <span>排序:</span>
          <el-input v-model="handleRow.sort" :disabled="true" size="mini" />
        </div>

        <div class="one">
          <span>时间:</span>
          <el-input v-model="handleRow.time" :disabled="true" size="mini" />
        </div>

      </div>
    </el-dialog>
    <!-- 大头像 -->
    <el-dialog
      title="图标展示"
      center
      :visible.sync="imgVisible"
      width="30%"
    >
      <el-image :src="editImg.icon" />
    </el-dialog>
  </div>
</template>

<script>
import { vipQuery, deleteBatch, updateVip } from '@/api/VIP'

import { initForm, copyObject, clearEmptyItem } from '@/utils/index'
import { uploadQNImg } from '@/api/user'
import Pagination from '@/components/Pagination'

export default {
  components: {
    Pagination
  },
  data() {
    return {
      mode: '', // 新增的
      tableData: {
        array: [],
        row: {},
        loading: false
      },
      dialogVisible: {
        vip: false

      },
      // 分页的
      pager: {
        pageNo: 1,
        pageSize: 10,
        total: 0
      },
      dirRow: [], // 存储编辑
      sels: [], // 选中的值显示

      handleRow: [], // 查看详情
      checkVisible: false,
      editImg: [], // 大头像
      imgVisible: false, // 头像的框
      id: [], // 多图的
      form: {
        // 用于新增
        title: '', // 标题
        icon: '', // 图标
        originalCost: '', // 原价
        cost: '', // 定价
        pricingCost: '', // 特价
        validity: '', // 有效天数
        type: '', // 价格类型
        vipType: '', // 套餐类型
        defaultSelect: ''

      },
      map: {
        type: {
          1: '特价vip',
          2: '包月vip',
          3: '连续包月vip',
          4: '包年vip'
        },

        vipType: {
          1: '黄金会员套餐',
          2: '铂金会员套餐'
        },
        defaultSelect: {
          1: '是',
          0: '否'
        }

      },
      rules: {
        // title: [{
        //   required: true, message: '标题不能为空', trigger: 'blur'
        // }],
        // originalCost: [
        //   { required: true, message: '原价不能为空' }

        // ]

      }

    }
  },
  created() {
    this.fetchData()
  },
  methods: {
    fetchData() {
      this.tableData.loading = true
      const _form = Object.assign({
        pageNo: this.pager.pageNo, // 页数
        pageSize: this.pager.pageSize // 条数
      }, this.filter)
      vipQuery(_form)
        .then((res) => {
          const { result = {}} = res
          this.tableData.array = result.records
          this.pager.total = result.total // 总数
        }).finally(_ => {
          this.tableData.loading = false
        })
    },

    // 复选框的操作
    selsChange(sels) {
      this.sels = sels
    },
    // 批量删除
    deleteFileOrDirectory() {
      const ids = this.sels.map((list) => list.id).join()
      this.$confirm('确定要删除选中的vip吗?', '提示')
        .then(() => {
          deleteBatch({
            ids: ids
          }).then((data) => {
            this.$message.success(data.message)
            this.fetchData()
          })
        })
        .catch((error) => {
          console.log(error)
        })
    },
    // 点击新增
    showDialog(mode, item) {
      this.mode = mode
      this.tableData.row = item || {}
      this.form = initForm(this.form)
      if (mode === 'edit') {
        this.form = copyObject(this.form, item, { numberToString: true })
      }
      this.dialogVisible.vip = true
    },
    // 新增的图片操作
    fakeClick(className) {
      const fileInput = document.querySelector(`input[type=file].${className}`)
      fileInput.click()
    },
    // 提交
    updateSubmit(form) {
      this.$refs[form].validate((valid) => {
        if (valid) {
          this.tableData.loading = true
          let _form = Object.assign({ id: this.tableData.row.id }, this.form)
          _form = clearEmptyItem(_form)
          updateVip(_form, this.mode).then(res => {
            this.$message.success(res.message)
            this.dialogVisible.vip = false
            this.fetchData()
          }).finally(_ => {
            this.tableData.loading = false
          })
        } else {
          console.log('error submit!!')
          return false
        }
      })
    },

    // 新增图标
    uploadFile(e, target) {
      const files = e.target.files
      if (files.length) {
        const formData = new FormData()
        formData.append('multipartFile', files[0])
        uploadQNImg(formData).then((res) => {
          // 新增的
          this[target[0]][target[1]] = res.data
        })
      }
    },

    // 页面显示的大图标
    changeImg(row) {
      this.imgVisible = true
      this.editImg = row
    },
    // 查看
    handleClick(row) {
      this.handleRow = row
      this.checkVisible = true
    },

    handlePagerChange(val) {
      this.pager.pageNo = val.index
      this.pager.pageSize = val.size
      this.fetchData()
    }

  }
}
</script>
<style scoped lang="scss">
.header{
    width: 100%;
    height: 60px;
    line-height: 60px;
    display: flex;
}
 .header  .header-left{
    flex: 1;
    font-weight: 500;
    font-size:20px ;
}
.header  .header-right{
    width: 200px;
}
.box {
  box-sizing: border-box;
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
}
.one {
  display: flex;

}
.one span {
  width: 100px;
  text-align: left;
  height: 40px;
  line-height: 40px;
}
.el-input {
  background: content-box;
}
/* 新增图标 */
.icon-container{
  width: 80px;
  height: 80px;
  border-radius: 4px;
  border: 1px dashed #ccc;
  position: relative;
  cursor: pointer;
  i{
    display: block;
    font-size: 24px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

</style>
